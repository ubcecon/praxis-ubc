name: Build and Deploy
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
     
      - name: Lint Quarto Notebooks
        run: |
          find ./project/docs/ -name "*.qmd" -type f -exec python meta/testing/linter.py {} \; > lint_output.txt
          if [ -s lint_output.txt ]; then
            echo "linting_failed=true" >> $GITHUB_OUTPUT
            cat lint_output.txt
          fi

      - name: Build Docker image
        run: |
          docker build -t my-app-image:latest -f ./meta/building/.dockerfile .

      - name: Extract web content
        run: |
          mkdir -p ./web-content
          docker create --name temp-container my-app-image:latest
          docker cp temp-container:/usr/share/nginx/html/. ./web-content
          docker rm temp-container
         
          echo "Web content directory contents:"
          ls -la ./web-content

      - name: Upload files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: ./web-content
          if-no-files-found: error

  prepare-notebooks:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      prepped-notebooks: ${{ steps.prep.outputs.dir }}
    steps:
      - name: Checkout source notebooks
        uses: actions/checkout@v3
        with:
          path: source-notebooks

      - name: Remove rendered files
        run: |
          find source-notebooks/project/docs -type f \( -name "*.html" -o -name "*.md" \) -delete

        #Ref for Branch
      - name: Checkout datasets
        uses: actions/checkout@v3
        with:
          repository: ubcecon/praxis-ubc
          ref: Website-edits-alexr
          path: datasets

        # Add file extensions of data and model files once all are on the main branch
      - name: Organize structure
        id: prep
        run: |
          mkdir -p final-notebooks/docs
 
          rsync -a --include '*/' \
            --include '*.ipynb' \
            --include '*.qmd' \
            --include '*.png' \
            --include '*.PNG' \
            --include '*.pdf' \
            --include '*.jpg' \
            --include '*.gif' \
            --include '*.svg' \
            --include '*.csv' \
            --include '*.txt' \
            --include '*.npy' \
            --include '*.py' \
            --include '*.pt' \
            --include '*.pth' \
            --include '*.webp' \
            --exclude '*' \
            source-notebooks/project/docs/ final-notebooks/docs/

          for dir in AMNE-376 ECON-227 hist_workshop intro_to_cnns intro_to_convolutions intro_to_deep_learning intro_to_transformers SOCI-280 SOCI-415 text_analysis; do
            section=$(echo "$dir" | cut -d'_' -f2- | tr '[:upper:]' '[:lower:]')
            dataset_dir="datasets/project/docs/$dir/datasets_${section}"
           
            mkdir -p "final-notebooks/docs/$dir"
            if [ -d "$dataset_dir" ]; then
              cp -r "$dataset_dir" "final-notebooks/docs/$dir/"
            else
              echo "Warning: Dataset directory not found: $dataset_dir"
            fi
          done

          echo "dir=$(pwd)/final-notebooks" >> $GITHUB_OUTPUT

      - name: Create master ZIP of all notebooks
        run: |
          cd final-notebooks
          zip -r ../all-notebooks.zip docs
          echo "Created all-notebooks.zip with all notebook categories"

      - name: Upload notebooks artifact
        uses: actions/upload-artifact@v4
        with:
          name: notebooks
          path: ${{ steps.prep.outputs.dir }}

      - name: Upload ZIP artifact
        uses: actions/upload-artifact@v4
        with:
          name: all-notebooks-zip
          path: all-notebooks.zip
          if-no-files-found: error

      - name: Print directory structure
        run: |
          echo "Contents of final-notebooks directory:" 
          tree final-notebooks

  render-notebooks:
    runs-on: ubuntu-latest
    needs: prepare-notebooks
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Miniconda with environment.yml
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          activate-environment: quarto-render
          environment-file: meta/building/environment_final_condensed.yml
          python-version: 3.11
          use-mamba: true
          auto-activate-base: false

      - name: Download prepared notebooks
        uses: actions/download-artifact@v4
        with:
          name: notebooks
          path: final-notebooks

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Verify environment setup
        run: |
          conda info
          conda list
          python --version
          python -c "import torch; print(f'PyTorch version: {torch.__version__}')"
          python -c "import transformers; print(f'Transformers version: {transformers.__version__}')"
          quarto check jupyter

      - name: Render Quarto notebooks to ipynb (excluding plan files)
        run: |
          cd final-notebooks
          find . -name "*.qmd" -type f -not -name "*plan*" | while read file; do
            echo "Rendering: $file to .ipynb"
            quarto render "$file" --to ipynb
          done

      - name: Upload rendered notebooks
        uses: actions/upload-artifact@v4
        with:
          name: rendered-notebooks
          path: final-notebooks
          if-no-files-found: error

  # Ref for branch Change
  sync-notebooks:
    name: üîÅ Sync notebooks to praxis-notebooks branch
    runs-on: ubuntu-latest
    needs: render-notebooks
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: Website-edits-alexr 
          fetch-depth: 0

      - name: Download prepared notebooks
        uses: actions/download-artifact@v4
        with:
          name: rendered-notebooks
          path: final-notebooks

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Copy notebooks to repository
        run: |
          # Remove existing docs directory if it exists
          rm -rf docs/
        
          # Copy the downloaded notebooks to the repository
          cp -r final-notebooks/docs ./
        
          echo "Copied notebook contents:"
          ls -la docs/

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: praxis-notebooks-update
          base: praxis-notebooks
          title: 'Update notebooks from main branch'
          body: |
            This PR updates the praxis-notebooks branch with the latest notebook content from the main branch.
          
            **Changes included:**
            - Updated notebook files rendered to .ipynb
            - Latest datasets
            - Media files and resources
          
            This PR was automatically generated by the sync-notebooks workflow.
          commit-message: 'Update notebooks from main branch'
          delete-branch: true
          draft: false

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: site
          path: site-content

      - name: Print directory structure
        run: |
          echo "Contents of site-content directory:"
          ls -la site-content

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: site-content
          publish_branch: gh-pages
