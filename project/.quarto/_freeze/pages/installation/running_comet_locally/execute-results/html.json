{
  "hash": "b3c738ed3a4a750c5833be47ed3fff71",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: 'Running Comet Locally'\ndate: 2025-02-16\ndescription: This notebook will demonstrate how to run the COMET website locally using Git and Docker.  \ncategories: \nformat:\n  html: default\n  ipynb:\n    jupyter:\n        kernelspec:\n            display_name: python3\n            language: python\n            name: Python3\n---\n\n\n## Outcome\n\nRun the COMET website locally using Git and Docker. \n\n## 1.0 Preface\nThis notebook will be split into two parts. All sections beginning with a **one** will be for Windows, and all sections with a **two** will be for Mac. We will begin with Windows. \n\n## 1.1 Cloning the Github Repository (Windows)\n\nOn Windows, first visit the offical [Git Website](https://git-scm.com/) and click download for Windows. After installation, follow the instructions in the install wizard, you can use the default settings (unless you have some other preferences). Once this process is finished, you have two options. **1.** you can clone the repository using the Command Line, or **2.** you can clone it using a GUI Git Client like [Github Desktop](https://github.com/apps/desktop). This is personal preference, if you are less comfortable using the terminal you can use Github Desktop. For the next steps you only need to follow **either** 1.1.1 or 1.1.2, as they accomplish the same task of cloning the repository. \n\n## 1.1.1 Cloning the Repository Using Command Line \nOpen the application Git Bash using Windows Search. If you wish to clone it to a specific location, navigate to that directory using the command `cd \"your\\path\\to\\it\"` if not it will install in the default location (the GitHub Folder). Next, inside Git Bash run the command:\n\n\n```{bash}\ngit clone https://github.com/ubcecon/comet-open.git\n```\n\n\nRunning this command will prompt you for your sign-in information for your GitHub account, follow the steps in the terminal. If you do not have an account, create one as it is needed for this notebook. \n\nAfter this process if completed, you will have a new directory named comet-open inside your GitHub Folder. \n\n## 1.1.2 Cloning the Repository Using GitHub Desktop\n\nIf you have not already, install [GitHub Desktop](https://github.com/apps/desktop), by clicking download and following the instructions in the install wizard. Once this is done, open GitHub Desktop and sign in using your GitHub Account. \n\nAt the top, click on File -> Clone Repository and in the URL tab, enter https://github.com/ubcecon/comet-open.git, then next choose the local path and click clone.  \n\n## 1.2 Enable Virtualization and Install WSL2\n\nTo run COMET locally, you will need to activate virtualization and install Windows Subsystem for Linux 2 (WSL2). To do this, you will need to restart your computer and enter your BIOS. This can be done by pressing F2, Delete, or another key during the restart process. The correct key will flash on screen. Once inside the BIOS look for a setting related to virtualization, which may be called \"Intel Virtualization Technology,\" \"AMD-V,\" or similar, depending on your motherboard manufacturer. Once you find the setting, enable it, save changes, and exit BIOS. \n\nTo install WSL 2, open PowerShell as Admin by right-clicking on it and selecting Run as Administrator. Then run the command below, during the install process, you will be asked to restart your computer. \n\n\n```{bash}\nwsl --install\n```\n\n\nVirtualization is necessary for this process, but it can have some negative impacts on your computer. None of these are major, but they're still something to keep in mind. There can be some performance impacts, system slowdowns, and issues with software or application compatibility (Licencing issues, Kernel Level Anti-Cheats for certain videogames, or simply software vendors stating that they do not want their apps running in VM's).\n\nIf any of this is an issue, you can always disable Virtualization by going back to your BIOS and disabling the feature in the same way you enabled it.\n\n## 1.3 Installing Docker \n\nGo to the [Docker Website](https://www.docker.com/) and click download for Windows AMD64, then follow the instructions in the installer. During the installation process, ensure that the \"Use WSL 2 instead of Hyper-V\" option is selected.  \n\n## 1.4 Building COMET Locally \n\nOpen an Admin PowerShell Terminal (right-clicking on it and pressing Run as Administrator) and navigate to your path to the GitHub Comet-Open folder.\n\nIt will look similar to `C:\\Users\\your\\path\\to\\GitHub\\comet-open`. Once you find this path, write it down and then in the PowerShell type in. \n\n```{bash}\ncd \"C:\\Users\\your\\path\\to\\GitHub\\comet-open\"\n```\n\n\nYou can then check if you are on the main branch of comet-open by running the following command inside of the command directory from before. If you are not already on the main branch, then this command will swap you back to it. \n\n```{bash}\ngit checkout main\n```\n\n\nNext, run the command:\n\n```{bash}\ndocker build -t comet-local:latest -f C:\\Users\\your\\path\\to\\GitHub\\comet-open\\meta\\building\\.dockerfile .\n```\n\n\nThis will build the image for COMET locally. This process will take some time, once it is completed, you will have a local image of the COMET website called comet-local with the tag latest. At this point, you are almost done.\n\nNext, run the command \n\n```{bash}\ndocker run -d -p 8080:80 comet-local:latest\n```\n\n\nThis will run the image inside of a container which can then be viewed with the URL `http://localhost:8080`. Open a browser and type in this URL, you will see the COMET Website displayed locally with all of the notebooks rendered. \n\n## 2.0 Mac\n\nThis process is more difficult on Mac this is because if you have a Mac with a Silicon chip (M Series Chip) it uses ARM64 Architecture as opposed to AMD64 like Windows. Docker works far better on AMD64 and most image creation on Mac is emulating AMD64 from ARM64 which takes longer and is far more unstable when doing intensive tasks (like rendering hundreds of notebooks with Quarto). This has been tested working on a `Macbook M3 Pro with 18gb of RAM running MacOS Sequoia 15.3` and the build took ~50 minutes to complete.\n\n## 2.1 Cloning the Github Repository (Mac)\nOn Mac, Git can be preinstalled. If it is not yet installed, then we will be following the instructions on the [Official Git Website](https://git-scm.com/downloads/mac). First, we will install [Homebrew](https://brew.sh/). To do this, open a terminal (press `Command` + `Space` and search `Terminal`) and paste in the command below.\n\n\n```{bash}\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n```\n\n\nThis command will install Homebrew. It may prompt you for your password - you can enter it in the terminal. Once this process finishes, type in the command below into the Terminal and Homebrew will install the Git package. \n\n\n```{bash}\nbrew install git\n```\n\n\nOnce this process is finished you have two options.\n\n1. You can clone the repository using the Command Line.\n2. You can clone the repository using a GUI Git Client, like [GitHub Desktop](https://github.com/apps/desktop). \n\nThis is a matter of personal preference. If you are less comfortable using the terminal, you can use GitHub Desktop. You only need to follow either **2.1.1** or **2.1.2**, as they accomplish the same task of cloning the repository. \n\n## 2.1.1 Cloning the Repository Using Terminal\n\nOpen your Terminal as we did before, and then navigate to the directory where you want to clone the repository using the `cd` command. For example:\n\n\n```{bash}\ncd ~/Documents\n```\n\n\nchanges the directory to your Documents folder. \n\nClone the repository by running the command:\n\n```{bash}\ngit clone https://github.com/ubcecon/comet-open.git\n```\n\n\n## 2.1.2 Cloning the Repository Using GitHub Desktop\n\nInstall [GitHub Desktop](https://github.com/apps/desktop) by pressing download and following the installation instructions. Once this is done, open GitHub Desktop and sign in using your GitHub Account. \n\nAt the top, click on `File -> Clone Repository` and in the URL tab enter https://github.com/ubcecon/comet-open.git. Next choose the local path and press clone.  \n\n## 2.2 Installing Docker\n\nGo to the [Docker Website](https://www.docker.com/). Once there, press `Download Docker Desktop` and select `Download for Mac` for the correct chip archetype (Intel or Apple Silicon). If you are unsure which chip your Mac has, you can check under `About This Mac`. Once downloaded, open the `.dmg` file and drag the Docker icon to your Applications folder. Then open Docker Desktop from your Applications folder. To complete the installation of Docker Desktop, select `Use recommended settings`, then type your password and then wait for Docker to start. You'll see the whale icon in your menu bar when it's ready.\n\n## 2.2 Configuring Docker\n\nIn order to build the image we have to change some setting in the Docker app. First open the Docker application and navigate to settings (Gear Icon). Under General: Disable \"Use Rosetta for x86/amd64 emulation.\" Once that is done go to resources for the successful build I had 12GB of Ram, 8 cores of CPU and 4GB of Swap Space allocated, I recommend this, but it might differ from computer to computer. \n\n## 2.3 Build COMET Locally\n\nNext, navigate to the folder where you cloned the `comet-open` directory and copy the path to the `comet-open` folder. You can do this by right-clicking on the folder and clicking `copy`. Then, open your Terminal again (`Command` + `Space` and search for Terminal), and change the directory using `cd` to the path to the folder. It should look something like this: \n\n\n```{bash}\ncd /Users/Path/to/your/comet-open\n```\n\n\nYou can then check if you are on the main branch of `comet-open` by running the following command.\n\n\n```{bash}\ngit branch\n```\n\n\nThis will list out which branches are available, and there will be a `*` next to the branch that you are on. If you are not already on the main branch, this command will swap you back to it:\n\n\n```{bash}\ngit switch main\n```\n\n\nNext, run the following command, but **be sure to change the path to YOURS!!! And made sure to set YOUR platform - this should be arm64 or amd64 depending on your Mac.**\n\n\n```{bash}\ndocker buildx build --platform linux/arm64 -f ./meta/building/.dockerfile -t comet-main:local --load .\n```\n\n\nThis will build the image for COMET locally. This process will take a long time (~50 minutes), so be patient! Once it is completed, you will have a local image of the COMET website called `comet-local` with the tag `latest`. At this point you are almost done\n\nNext run the command \n\n```{bash}\ndocker run -d -p 8080:80 comet-local:latest\n```\n\n\nThis will run the image inside of a container which can then be viewed with the URL `http://localhost:8080`. Open a browser and type in this URL, you will see the COMET website displayed locally with all of the notebooks rendered. \n\n",
    "supporting": [
      "running_comet_locally_files"
    ],
    "filters": [],
    "includes": {}
  }
}